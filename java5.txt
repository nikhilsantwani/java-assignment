
1 .binary to decimal------


import java.util.Scanner;

public class BinaryToDecimal {
    public static void main(String[] args) {
        int bin;
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter a number in binary");
        bin=sc.nextInt();
        int temp = bin;
        int digits=0;
        while (temp!=0){
            temp = temp/10;
            digits++;
        }
        int decimal=0;
        for(int i =0;i<digits;i++){

            decimal= (int) (decimal+bin%10*Math.pow(2,i));
            bin=bin/10;
        }

        System.out.println("In decimal system :"+decimal);

    }}


**************************************************************************************************************



1       1
12     21 
123   321
1234 4321
123454321

soln :------ 

public class Pattern1 {
    public static void main(String[] args) {

        int n=5;
        for(int i=1;i<=n;i++){

            for(int j=1;j<=i;j++){
                System.out.print(j);
            }
            for(int j=1;j<=2*(n-i)-1;j++){
                System.out.print(" ");
            }
            for (int j=i;j>=1;j--){
                if(j==5){
                    continue;
                }
                System.out.print(j);
            }

            System.out.println();
        }


    }
}

***********************************************************************************************



3.
 array element shifting arr{1,2,3,4,5,6,7,8,9,10} to arr{5,6,7,8,9,10,1,2,3,4}



import java.util.Scanner;

public class ShiftingArray {

    public static void main(String[] args) {

        int []arr = {1,2,3,4,5,6,7,8,9,10};
        int n;
        System.out.println("Enter a number to shift array elements :");
         n = new Scanner(System.in).nextInt();
        for(int i=0; i<n;i++){
            int temp = arr[0];
            for(int j=0;j<arr.length-1;j++){
                arr[j]=arr[j+1];
            }
            arr[arr.length-1]=temp;
        }

        for(int i=0;i<arr.length;i++){
            System.out.print(arr[i]);
        }
    }
}



*******************************************************************************************************



4. Series printing --------------




import java.util.Scanner;

public class SeriesPrint {
    public static void main(String[] args) {
        int n;
        System.out.println("Enter a number ");
        n=new Scanner(System.in).nextInt();
        for(int i=0;i<n;i++){
            System.out.print(" "+(int)(i*i*i+1));
        }
    }
}


********************************************************************************************************






5. 
 1 2 3 4 5 4 3 2 1
   1 2 3 4 3 2 1 
     1 2 3 2 1 
       1 2 1 
         1





public class Pettern2 {

    public static void main(String[] args) {


        int n=5;

        for(int i=1;i<=n;i++){
            for(int j=1;j<=i;j++){
                System.out.print(" ");
            }
            for(int j=1;j<=n-i+1;j++){
                System.out.print(j);
            }
            for(int j=n-i;j>=1;j--){
                System.out.print(j);
            }

            System.out.println();
        }


    }

}


*************************************************************************************************


6.armstrong number without using any predefine function


import java.util.Scanner;

public class ArmstrongNumber {
    public static void main(String[] args) {

        int n;
        System.out.println("Enter a number");
        n=new Scanner(System.in).nextInt();

        int digits=0;
        int temp=n;
        while (temp!=0){
            temp=temp/10;
           digits++;
        }

        int arm=0;
        temp=n;
        while (temp!=0){

            arm=arm+pow(temp%10,digits);
            temp=temp/10;
        }

        if(arm==n){
            System.out.println("number is armstrong ");
        }
        else {
            System.out.println("number is not armstrong");
        }

    }

    static int pow(int rem,int digits){
        int res=1;
        for(int i=1;i<=digits;i++){
            res=res*rem;
        }

        return res;
    }
}



*****************************************************************************************************************

7. Transpose of a diagonal  matrix


                   
public class MatrixTranspose {

    public static void main(String[] args) {   
        int  [][]arr = {{1,2,3},{4,5,6},{7,8,9}};
        System.out.println("Matrix before Transpose :");        ////////////for diagonal matrix
        for(int i=0; i< arr.length;i++){
            for(int j=0;j<arr[i].length;j++){
                System.out.print(arr[i][j]);
            }
            System.out.println();
        }
        System.out.println("After transpose ");

        for(int i=0;i< arr.length;i++){
            for(int j=0;j< arr[i].length;j++){
                int temp=arr[i][j];
                if(i!=j&& i<j){
                    arr[i][j]=arr[j][i];
                    arr[j][i]=temp;
                }
            }
        }

        for(int i=0; i< arr.length;i++){
            for(int j=0;j<arr[i].length;j++){
                System.out.print(arr[i][j]);
            }
            System.out.println();
        }

    }

}

********************************************************************************************************************

Remove duplicates from sorted array without using another array

public class RemoveDuplicate {

        public static void main (String[] args) { ///////////for sorted array
            int array[] = {1,2,2,3,4,4,4,5};
            int length = array.length;

            int j = 0;//for next element
            for (int i=0; i < length-1; i++){
                if (array[i] != array[i+1]){
                    array[j] = array[i];
                    j++;
                }
            }
            array[j++] = array[length-1];

            length = j;
           //printing array elements
            for(int i=0; i<length; i++)
                System.out.print(array[i]+" ");

        }
}


**********************************************************************************************************************




List methods

import java.util.ArrayList;
import java.util.Iterator;

public class Colllection1 {
    public static void main(String[] args) {
        ArrayList<String> list = new ArrayList<String>();///////////Creating a list
        list.add("Rahul");
        list.add("Gourav");
        list.add("Rajesh");
        list.add("Ajay");

       /* Iterator itr = list.iterator();
        while (itr.hasNext()){
            System.out.println(itr.next());
        }*/


        /*for (var v :list){
            System.out.println(v);
        }*/

        //list.remove(3);

        ArrayList<String> list1 = new ArrayList<String>();
        list1.add("Ajay");
        list1.add("Gourav");

        list.removeAll(list1);

        list.set(1,"Vijay");
        for(int i=0;i<list.size();i++){
            System.out.println(list.get(i));
        }
    }

}

*************************************************************************************************



1. How to reverse a String in Java?

It might be surprising, but there is no reverse() utility method in the String class. But, it’s a very simple task. We can create a character array from the string and then iterate it from the end to start. We can append the characters to a string builder and finally return the reversed string.

Bonus Points: Adding null check in the method and using StringBuilder for appending the characters.

Easy to Miss: The indexing in Java starts from 0. So, we have to start at “chars.length – 1” in the for loop.

2. How to swap two numbers without using a third variable?

It’s a slightly tricky question. It’s a three steps process. It’s better visualized in code.

We can’t return multiple variables in Java. Since Java is Pass-by-Value and these are primitive data types, their values won’t change. For example, below swap function will not change the input integer values.

3. Java Program to check if a vowel is present in the string?

We can use regular expression to check if the string contains vowels or not.

4. Java program to check if the given number is Prime?

We can write a simple program to divide the given number “n” from 2 to n/2 and check the remainder. If the remainder is 0, then it’s not a prime number.

But, this is not very memory and time-efficient. For a given number N, if there is a prime number M between 2 to √N (square root of N) that evenly divides it, then N is not a prime number.

5. Fibonacci Series using recursion.

We can use a for loop to print fibonacci series.

The fibonacci number is generated by adding the previous two numbers – F(N) = F(N-1) + F(N-2). We can use recursion to print fibonacci series.

6. Check if a List of integers contains only odd numbers?
We can use for loop and check each element one by one if they are odd or not.

7. Palindrome Check
A palindrome string is one whose reverse is also the same string. So we can reverse the input string and check if both strings are equal or not. We can also use the String charAt(int index) method to check for palindrome string.

8. How to remove Whitespaces from String

9. Sorting an array in Java?

10. Find factorial of an integer using recursion function?

11. Revese a List?
12.Find second largest number in an array?
13.How to Shuffle an Array in Java?
14.remove all occurrences of a given character from input String?
15.How to get distinct characters and their count in a String?
16.Write a Java Program to iterate HashMap using While and advance for loop.
17.Write a Java Program to check Armstrong number.
https://www.edureka.co/blog/30-pattern-programs-in-java/
18.13. Triangle Star pattern
Enter the number of rows: 5

    *
   * *
  *   *
 *     *
*********
19.15. Diamond Star Pattern
Enter the number of rows: 5

    *
   * *
  *   *
 *     *
*       *
 *     *
  *   *
   * *
    *
20.3. Pascal’s Triangle Program in Java
 

             1
           1   1
         1   2   1
       1   3   3   1
     1   4   6   4   1
21.4. Diamond Pattern Program in Java
 

   1
  212
 32123
4321234
 32123
  212
   1
22.8. Binary Number Pattern
Enter the number of rows: 5

10101
01010
10101
01010
10101
23.9. Zeros/ ones Pattern Programs
Enter the number of rows: 5

1
10
101
1010
10101
24.5. Diamond Pattern in Java
Enter a Character between A to Z : F

     A
    B B
   C   C
  D     D
 E       E
F         F
 E       E
  D     D
   C   C
    B B
     A
25.Alphabet Star Pattern
*** 
* *
***
* *
* *
* *
26.
123454321
1234 4321
123   321
12     21
1       1
21     12
321   123
4321 1234   
543212345

27.
1
3 5
7 11 13
17 19 23

28.
1
1 2
3 5 8
13 21 34

29.
2
4 9
16 25 36
49 64 81 100

30.
1
8 81
256 15625 279936

https://medium.com/javarevisited/top-21-string-programming-interview-questions-for-beginners-and-experienced-developers-56037048de45

31.Difference between String, StringBuffer and StringBuilder with example? 
32.how to remove the duplicate character from String
33.Given string str, How do you find the longest palindromic substring in str? 
34.How do you find the length of the longest substring without repeating characters? (solution).
35.How do you remove a given character from String? 
36.Given an array of strings, find the most frequent word in a given array, I mean, the string that appears the most in the array. In the case of a tie, ​the string that is the smallest (lexicographically) ​is printed. 
37. Write a Java program to find all combination of four elements of a given array whose sum is equal to a given value.   Go to the editor

Click me to see the solution
38. Write a Java program to find the two elements from a given array of positive and negative numbers such that their sum is closest to zero.   Go to the editor


https://wikimass.com/python/number-patterns-program

Click me to see the solution
39.

1 
2 4 
1 3 5 
2 4 6 8 
1 3 5 7 9

40.
1 
2 6 
3 7 10 
4 8 11 13 
5 9 12 14 15
41.
1234554321
1234**4321
123****321
12******21
1********1
42.
5432*
543*1
54*21
5*321
*4321
43.
                1
            4   9   16
        25  36  49  64  81
    100 121 144 169 196 225 256
289 324 361 400 441 484 529 576 625

44.

1   2   3   4   5   6   7   8   9  10
36  37  38  39  40  41  42  43  44  11
35  64  65  66  67  68  69  70  45  12
34  63  84  85  86  87  88  71  46  13
33  62  83  96  97  98  89  72  47  14
32  61  82  95  100 99  90  73  48  15
31  60  81  94  93  92  91  74  49  16
30  59  80  79  78  77  76  75  50  17
29  58  57  56  55  54  53  52  51  18
28  27  26  25  24  23  22  21  20  19
45.
addition of mtrix
46.
multiplication of matrix
47.remove dublicate elemnts from n array
48.print substrings started with vowels from an string.
49.print 'how are you?' to  'you are how?'.
50.show all words from an strings with occurance (word count).


--------------------------------------------------------------------------------
